plugins {
	id 'java'
	id 'maven-publish'
	id 'java-gradle-plugin'
	id 'eclipse'
}

def ENV = System.getenv()

base {
	archivesName = project.name
}
version = '24.0'
group = project.maven_group

if (!ENV.MAVEN_URL) {
	version += '+local'
}

repositories {
	maven {
		name = 'Fabric'
		url = 'https://maven.fabricmc.net'
	}
	maven {
		name = 'Quilt'
		url = 'https://maven.quiltmc.org/repository/release'
	}
	maven {
		name = 'Ornithe'
		url = 'https://maven.ornithemc.net/releases'
	}
	mavenCentral()
}

dependencies {
	implementation gradleApi()

	implementation 'de.undercouch.download:de.undercouch.download.gradle.plugin:5.6.0'
	implementation 'commons-io:commons-io:2.8.0'
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'com.google.guava:guava:33.1.0-jre'
	implementation 'net.ornithemc:enigma-cli:1.2.7'
	implementation 'net.ornithemc:stitch:0.19.5'
	implementation 'net.ornithemc:mapping-utils:0.16.1'
	implementation 'net.ornithemc:exceptor:1.0.0'
	implementation 'net.ornithemc:nester:1.3.2'
	implementation 'net.fabricmc:tiny-remapper:0.9.0'
	implementation 'net.fabricmc:name-proposal:0.2.0'
	implementation 'net.fabricmc:mapping-io:0.5.1'
	implementation 'io.github.gaming32:signature-changer:1.0.0-beta.3'
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}

	withSourcesJar()
}

jar {
	manifest {
		attributes 'Implementation-Version': project.version
	}
}

gradlePlugin {
	plugins {
		keratin {
			id = 'keratin'
			implementationClass = 'net.ornithemc.keratin.KeratinGradlePlugin'
		}
	}
}

import org.w3c.dom.Document
import org.w3c.dom.Element
import org.w3c.dom.Node

publishing {
	publications {
		plugin(MavenPublication) {
			groupId group
			artifactId base.archivesName.get()
			version version

			from components.java
		}

		// Also publish a snapshot so people can use the latest version if they wish
		snapshot(MavenPublication) {
			groupId project.group
			artifactId project.base.archivesName.get()
			version project.version + "-SNAPSHOT"

			from components.java
		}

		// Manually crate the plugin marker for snapshot versions
		snapshotPlugin(MavenPublication) {
			groupId 'keratin'
			artifactId 'keratin.gradle.plugin'
			version project.version + '-SNAPSHOT'

			pom.withXml({
				// Based off org.gradle.plugin.devel.plugins.MavenPluginPublishPlugin
				Element root = asElement()
				Document document = root.getOwnerDocument()
				Node dependencies = root.appendChild(document.createElement('dependencies'))
				Node dependency = dependencies.appendChild(document.createElement('dependency'))
				Node groupId = dependency.appendChild(document.createElement('groupId'))
				groupId.setTextContent('net.ornithemc')
				Node artifactId = dependency.appendChild(document.createElement('artifactId'))
				artifactId.setTextContent('keratin')
				Node version = dependency.appendChild(document.createElement('version'))
				version.setTextContent(project.version + '-SNAPSHOT')
			})
		}
	}
	repositories {
		maven {
			name = 'release'
			if (ENV.MAVEN_URL) {
				url ENV.MAVEN_URL
				credentials {
					username ENV.MAVEN_USERNAME
					password ENV.MAVEN_PASSWORD
				}
			}
		}
		maven {
			name = "snapshot"
			if (ENV.SNAPSHOTS_URL) {
				url ENV.SNAPSHOTS_URL
				credentials {
					username ENV.SNAPSHOTS_USERNAME
					password ENV.SNAPSHOTS_PASSWORD
				}
			}
		}
	}
}

tasks.withType(PublishToMavenRepository) {
	onlyIf {
		(repository == publishing.repositories.release && publication == publishing.publications.plugin)
				||
				(repository == publishing.repositories.snapshot
						&& (publication == publishing.publications.snapshot
						|| publication == publishing.publications.snapshotPlugin))
				|| (repository == publishing.repositories.release && publication.name == "keratinPluginMarkerMaven")
	}
}
